/*
 * CodeBattle API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"database/sql"
	"flag"
	"fmt"
	"log"

	_ "github.com/mattn/go-sqlite3"
	"github.com/volatiletech/sqlboiler/v4/boil"

	sw "codebattle/server/api/go"
)

type Args struct {
	Port    string
	IsDebug bool
}

func parseArgs() Args {
	args := Args{}
	flag.StringVar(&args.Port, "port", "8081", "")
	flag.BoolVar(&args.IsDebug, "debug", false, "")
	flag.Parse()
	return args
}

func setupDatabase(args Args) error {
	db, err := sql.Open("sqlite3", "../sql/db.sqlite3")
	if err != nil {
		return err
	}
	if args.IsDebug {
		boil.DebugMode = true
	}
	boil.SetDB(db)
	return nil
}

func main() {
	args := parseArgs()

	if err := setupDatabase(args); err != nil {
		log.Fatal(err)
	}

	router := sw.NewRouter()

	log.Printf("Server started")
	log.Fatal(router.Run(fmt.Sprintf(":%s", args.Port)))
}
